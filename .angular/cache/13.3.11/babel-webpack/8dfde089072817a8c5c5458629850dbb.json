{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let GlobalizationService = /*#__PURE__*/(() => {\n  class GlobalizationService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.baseUrl = \"https://localhost:7053/api/\";\n      this.authToken = '';\n      this.token = localStorage.getItem('BToken');\n      this.setLoginSecurityHeaders();\n      this.setSecurityHeaders();\n    }\n    setSecurityHeaders() {\n      this._headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Authorization': 'Bearer ' + localStorage.getItem('BToken')\n      });\n    }\n    setLoginSecurityHeaders() {\n      this._headerslogin = new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Accept': 'application/json',\n        'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, PUT'\n      });\n    }\n    GetLanguages() {\n      this._headers = new HttpHeaders();\n      this._headers = this._headers.append(\"Content-Type\", \"application/json\");\n      this._headers = this._headers.append(\"Accept\", \"application/json\");\n      this._headers = this._headers.append(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT\");\n      return this.http.post(this.baseUrl + \"Master/GetLanguages\", {\n        headers: this._headers\n      });\n    }\n    GetLicensePlateCountries() {\n      this._headers = new HttpHeaders();\n      this._headers = this._headers.append(\"Content-Type\", \"application/json\");\n      this._headers = this._headers.append(\"Accept\", \"application/json\");\n      this._headers = this._headers.append(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT\");\n      return this.http.post(this.baseUrl + \"Master/GetLicensePlateCountries\", {\n        headers: this._headers\n      });\n    }\n    GetLicensePlateStates() {\n      this._headers = new HttpHeaders();\n      this._headers = this._headers.append(\"Content-Type\", \"application/json\");\n      this._headers = this._headers.append(\"Accept\", \"application/json\");\n      this._headers = this._headers.append(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT\");\n      return this.http.post(this.baseUrl + \"Master/GetLicensePlateStates\", {\n        headers: this._headers\n      });\n    }\n    GetAccountTypes() {\n      this._headers = new HttpHeaders();\n      this._headers = this._headers.append(\"Content-Type\", \"application/json\");\n      this._headers = this._headers.append(\"Accept\", \"application/json\");\n      this._headers = this._headers.append(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT\");\n      return this.http.post(this.baseUrl + \"Master/GetAccountTypes\", {\n        headers: this._headers\n      });\n    }\n    GetAccountStatuses() {\n      this._headers = new HttpHeaders();\n      this._headers = this._headers.append(\"Content-Type\", \"application/json\");\n      this._headers = this._headers.append(\"Accept\", \"application/json\");\n      this._headers = this._headers.append(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT\");\n      return this.http.post(this.baseUrl + \"Master/GetAccountStatuses\", {\n        headers: this._headers\n      });\n    }\n    GetAttributesOrFlags() {\n      this._headers = new HttpHeaders();\n      this._headers = this._headers.append(\"Content-Type\", \"application/json\");\n      this._headers = this._headers.append(\"Accept\", \"application/json\");\n      this._headers = this._headers.append(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, PUT\");\n      return this.http.post(this.baseUrl + \"Master/GetAttributesOrFlags\", {\n        headers: this._headers\n      });\n    }\n  }\n  GlobalizationService.ɵfac = function GlobalizationService_Factory(t) {\n    return new (t || GlobalizationService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  GlobalizationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GlobalizationService,\n    factory: GlobalizationService.ɵfac,\n    providedIn: 'root'\n  });\n  return GlobalizationService;\n})();","map":null,"metadata":{},"sourceType":"module"}